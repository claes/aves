/*
 * Copyright (c) Claes Holmerson 2013, 2015. The program is licensed under GNU GPL v3. See LICENSE.txt for details.
 */

apply plugin: 'com.android.application'
apply plugin: 'androidsvgdrawable'

android {
    signingConfigs {
        config {}
        apply from: 'signing.gradle', to: config
    }
    compileSdkVersion 17
    buildToolsVersion "22.0.1"
    defaultConfig {
        applicationId "se.eliga.aves"
        minSdkVersion 14
        targetSdkVersion 16
        versionCode buildVersionCode()
        versionName buildVersionName()
        buildConfigField "java.lang.String", "BUILDTIME", "\"" + buildTime() + "\""

    }

    sourceSets {
        main.res.srcDirs += 'build/generated/res/main'
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "REPORT_CRASHES", "true"
            buildConfigField "java.lang.String", "BUILDTYPE", "\"debug\""
            applicationIdSuffix ".debug"
        }
        release {
            buildConfigField "boolean", "REPORT_CRASHES", "false"
            buildConfigField "java.lang.String", "BUILDTYPE", "\"release\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.config
        }
    }
}

// create a task to convert SVG to PNG DRAWABLE
task svgToDrawablePng(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    // specify where to pick SVG from
    from = file('src/main/svg-png')
    // specify the android res folder
    to = file('build/generated/res/main')
    //to = file('src/main/res')
    // create qualified directories if missing
    createMissingDirectories = true
    // override files only if necessary
    overrideMode = 'ifModified'
    // let generate PNG for the following densities only
    targetedDensities = ['ldpi', 'hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    // relative path of the file specifying nine patch specs
    ninePatchConfig = file('src/main/svg-png/9patch.json')
    // output format of the generated resources
    outputFormat = 'PNG'

    // svg resources can be renamed on the fly
    rename = [phone_to_rename: 'phone']
}


dependencies {
    compile project(':library')
    compile files('libs/smoothie-0.1.jar')
    compile files('libs/universal-image-loader-1.8.5-with-sources.jar')
    compile 'ch.acra:acra:4.6.1'
}
